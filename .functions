#!/usr/bin/env bash

# start the ssh-agent
SSH_ENV=$HOME/.ssh/environment
function start_agent {
    echo "Initializing new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
    tree -aC -I '.git|env|.snakemake|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}


# Set up fzf, if it's installed
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Select a conda env to activate
sa() {
    local name=$(conda env list | grep -v "#" | fzf)
    local env=$(echo $name | awk '{print $1}');
    eval "source activate $env";
}



function prsetup {
    if [ -z $1 ]; then
        echo "Run this function in a clone of a repo with a pull request to set up"
        echo "to push back to the contributor's fork. When creating the PR, the "
        echo "contributor must have checked the box, 'Allow edits from maintainers'."
        echo "The first argument can be determined by looking at the top of the "
        echo "PR and copying the <contributor:branch>."
        echo
        echo "Usage: prsetup <contributor:branch>"
        echo
        echo "(assumes same name of repo as current origin)"
        echo
        return 1
    fi
    current_remote=$(git remote -v | grep "^origin" | grep "(fetch)" | cut -f2 | cut -f1 -d " ")
    current_repo_name=$(basename $current_remote)

    contributor=$(echo $1 | cut -f1 -d ":")
    contributor_branch=$(echo $1 | cut -f2 -d ":")

    contributor_fork=git@github.com:$contributor/$current_repo_name.git

    echo "The following are the detected variables:"
    echo "current_remote: " $current_remote
    echo "current_repo_name: " $current_repo_name
    echo "contributor_branch: " $contributor_branch
    echo "contributor: " $contributor
    echo "contributor_fork: " $contributor_fork

    git remote add $contributor $contributor_fork
    git fetch $contributor
    git checkout -b $contributor-$contributor_branch $contributor/$contributor_branch

    echo "Now make changes, and run:"
    echo "  git push $contributor HEAD:$contributor_branch"
}
